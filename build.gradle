buildscript {
   ext {
      queryDslVersion = "5.0.0"
   }
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
   id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.dfoff'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//JWT토큰을 사용하기 위한 의존성
	implementation('io.jsonwebtoken:jjwt-root:0.11.5')
	implementation('io.jsonwebtoken:jjwt-impl:0.11.5')
	implementation('io.jsonwebtoken:jjwt-jackson:0.11.5')
	// Querydsl 추가
	    implementation 'com.google.code.findbugs:jsr305:3.0.2'
implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
implementation 'com.google.code.findbugs:findbugs-annotations:3.0.1'
implementation 'net.java.dev.jna:jna:5.8.0'
implementation 'net.java.dev.jna:jna-platform:5.8.0'
	implementation('io.github.furstenheim:copy_down:1.0')
implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
implementation('io.hypersistence:hypersistence-utils-hibernate-60:3.1.0')
	implementation('commons-io:commons-io:2.11.0')
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  	implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.mockito:mockito-inline:3.11.2'
}


tasks.named('test') {
	useJUnitPlatform()
}
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
   jpa = true
   querydslSourcesDir = querydslDir
}
sourceSets {
   main.java.srcDir querydslDir
}
compileQuerydsl{
   options.annotationProcessorPath = configurations.querydsl
}
configurations {
   compileOnly {
      extendsFrom annotationProcessor
   }
   querydsl.extendsFrom compileClasspath
}